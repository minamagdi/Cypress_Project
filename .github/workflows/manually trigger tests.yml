name: Manually triggered test

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment'
        required: true
        default: 'QA'
        options:
          - 'QA'
          - 'Dev'
          - 'UAT'
      product:
        type: choice
        description: 'Product'
        required: true
        default: 'sdk'
        options:
          - 'sdk'
          - 'respi'
          - 'cardio'
      tags:
        description: 'Tags'
        required: true
        default: '@LoginAndSignup'
      configFileName:
        description: 'Config JSON File Name'
        required: true
        default: 'deployment1-QA'
      browser:
        type: choice
        description: 'Browser'
        required: true
        default: 'electron'
        options:
          - 'electron'
          - 'chrome'
          
jobs:
  install:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    env:
      LUNCH_NAME: Manually triggered test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.1.0

      - name: Install node v16
        uses: actions/setup-node@v3.5.0
        with:
          node-version: 16

      - name: Use cached dependencies
        uses: bahmutov/npm-install@v1.6.0

  run-test:
    runs-on: ubuntu-latest
    needs: install

    name: Run ${{ github.event.inputs.tags }} test on ${{ github.event.inputs.product }} - ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: InstallDeps
        uses: cypress-io/github-action@v4.2.0
        with:
          runTests: false

      - name: Create report and screenshot directories
        run: mkdir -p report/{HTML,JSON} cypress/screenshots

      # - name: Install Open VPN
      #   run: |
      #     sudo apt update
      #     sudo apt install -y openvpn openvpn-systemd-resolved

      # - name: Open VPN Config download
      #   run: |
      #     curl -s https://api.perimeter81.com/api/networks/XkBbhFGBtm/tunnels/vTll3erGtY/openvpn-config/download -o config.ovpn

      # - name: Connect VPN
      #   uses: "kota65535/github-openvpn-connect-action@v1"
      #   with:
      #     config_file: ./config.ovpn
      #     username: ${{ secrets.VPN_USERNAME }}
      #     password: ${{ secrets.VPN_PASSWORD }}

      - name: Check IP
        run: curl ifconfig.me

      - name: Test Run ${{ github.event.inputs.tags }}-${{ github.event.inputs.product }}${{ github.event.inputs.environment }}
        run: npx cypress-tags run -e TAGS='${{ github.event.inputs.tags }}' -b ${{ github.event.inputs.browser }} --config-file ./cypress/support/configFiles/${{ github.event.inputs.product }}${{ github.event.inputs.environment }}/${{ github.event.inputs.configFileName }}.json

      - name: Save clinicians testData
        uses: actions/upload-artifact@v3.1.0
        with:
          name: cliniciansTestData
          path: |
            cypress/fixtures/clinicianAdminData.json
            cypress/fixtures/clinicianAdminID.json
            cypress/fixtures/clinicianData.json

      - name: Save patients testData
        uses: actions/upload-artifact@v3.1.0
        with:
          name: patientsTestData
          path: cypress/fixtures/patientsData.json

      - name: Save artifacts screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: cypress/screenshots

      - name: Save artifacts JSON Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: moduleJsonReportFiles
          path: report/JSON

      - name: Save artifacts testPlanIDs JSON Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: testPlanIDsFiles
          path: cypress/fixtures/testPlanIds.json

      - name: Save artifacts trReport JSON Reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: trReportFiles
          path: cypress/fixtures/trReport.json

  report-generation:
   runs-on: ubuntu-latest
   needs: run-test
   if: always()

   steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: InstallDeps
        uses: cypress-io/github-action@v4.2.0
        with:
          runTests: false

      - name: Download all JSON Report artifact files
        uses: actions/download-artifact@v3
        with:
          name: moduleJsonReportFiles
          path: ./etc/usr/artifacts/

      - name: Generate Timestamp
        id: date
        run: echo "::set-output name=datetime::$(date +'%Y%m%d-%H%M%S')"

      - name: Generate HTML Report
        if: always()
        run: |
          node ./generateHTMLReport.js ./etc/usr/artifacts ./etc/usr/artifacts "AdhocRun_${{ steps.date.outputs.datetime }}"
        
      - name: Save HTML Report
        if: always()
        uses: actions/upload-artifact@v3.1.0
        with:
          name: HTML Report
          path: ./etc/usr/artifacts/AdhocRun_${{ steps.date.outputs.datetime }}.html

